# GitHub Workflow for managing repository visibility

name: Manage Repository Visibility

on:
  schedule:
    # Runs daily at midnight UTC
    - cron: "0 0 * * *"
  workflow_dispatch: # Allows manual triggering

jobs:
  manage_visibility:
    runs-on: ubuntu-latest
    permissions:
      # The default GITHUB_TOKEN (github.token) is used for general gh CLI setup in Actions.
      # However, it may not have 'repo' scope permissions to change visibility.
      # A Personal Access Token (PAT) with 'repo' scope is required for privileged operations.
      # 1. Create PAT: GitHub settings -> Developer settings -> PATs (classic) -> 'repo' scope.
      # 2. Add Secret: Repo Settings -> Secrets -> Actions -> New: REPO_ACCESS_TOKEN.
      contents: read # For checkout
    env: # Set GH_TOKEN at job level for gh CLI's general satisfaction in Actions
      GH_TOKEN: ${{ github.token }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh
          echo "${{ github.token }}" | gh auth login --with-token
        env: # Explicitly set for this step to ensure gh auth login works
          GH_TOKEN: ${{ github.token }}

      - name: Check and Update Repository Visibility
        env:
          # REPO_ACCESS_TOKEN is used specifically for commands needing higher privileges
          REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
          REPO_NAME: ${{ github.repository }} # Gets the owner/repo format
        run: |
          echo "Processing repository: $REPO_NAME"

          # Get repository creation date and current visibility using the PAT
          REPO_INFO=$(GH_TOKEN=$REPO_ACCESS_TOKEN gh repo view $REPO_NAME --json createdAt,visibility --jq '. | .createdAt + " " + .visibility')
          CREATED_AT=$(echo $REPO_INFO | cut -d' ' -f1)
          CURRENT_VISIBILITY=$(echo $REPO_INFO | cut -d' ' -f2)

          echo "Repository created at: $CREATED_AT"
          echo "Current visibility: $CURRENT_VISIBILITY"

          # Calculate age in seconds
          CREATED_AT_SECONDS=$(date -d "$CREATED_AT" +%s)
          CURRENT_SECONDS=$(date +%s)
          AGE_SECONDS=$((CURRENT_SECONDS - CREATED_AT_SECONDS))

          # 1 week in seconds (7 days * 24 hours/day * 60 minutes/hour * 60 seconds/minute)
          ONE_WEEK_SECONDS=$((7 * 24 * 60 * 60))

          echo "Repository age in seconds: $AGE_SECONDS"
          echo "One week in seconds: $ONE_WEEK_SECONDS"

          if [ "$CURRENT_VISIBILITY" = "PUBLIC" ] && [ "$AGE_SECONDS" -gt "$ONE_WEEK_SECONDS" ]; then
            echo "Repository is older than 1 week and is public. Changing to private."
            # Use PAT for the edit command
            GH_TOKEN=$REPO_ACCESS_TOKEN gh repo edit $REPO_NAME --visibility private --accept-visibility-change-consequences
            if [ $? -eq 0 ]; then
              echo "Successfully changed visibility to private."
            else
              echo "Failed to change visibility. Check permissions and token scopes."
              exit 1
            fi
          elif [ "$CURRENT_VISIBILITY" != "PUBLIC" ]; then
            echo "Repository is not public. No action needed regarding age."
          else
            echo "Repository is not older than 1 week. No action needed."
          fi
